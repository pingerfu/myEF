//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Site.Data.Mapping
{
    public partial class FurnitureKindsMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Site.Models.FurnitureKinds>
    {
        public FurnitureKindsMap()
        {
            // table
            ToTable("FurnitureKinds", "dbo");

            // keys
            HasKey(t => t.Id);

            // Properties
            Property(t => t.Id)
                .HasColumnName("ID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.KindsId)
                .HasColumnName("KindsId")
                .IsOptional();
            Property(t => t.FurnitureId)
                .HasColumnName("FurnitureId")
                .IsOptional();
            Property(t => t.KindsFloor2Id)
                .HasColumnName("KindsFloor2Id")
                .IsOptional();
            Property(t => t.KindsFloor1Id)
                .HasColumnName("KindsFloor1Id")
                .IsOptional();
            Property(t => t.OrderId)
                .HasColumnName("OrderId")
                .IsOptional();
            Property(t => t.IsDefault)
                .HasColumnName("IsDefault")
                .IsOptional();
            Property(t => t.CreateTime)
                .HasColumnName("CreateTime")
                .IsOptional();

            // Relationships
            HasOptional(t => t.Kinds)
                .WithMany(t => t.FurnitureKinds)
                .HasForeignKey(d => d.KindsId)
                .WillCascadeOnDelete(false);

            InitializeMapping();
        }
    }
}
